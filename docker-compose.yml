version: "3.8"
services:
  app:
    build: .
    expose:
      - "8400"
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - ./app:/app
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    command: celery -A app.celery_worker.celery_app worker --loglevel=info -Q email
    depends_on:
      - rabbitmq
      - redis
    volumes:
      - ./app:/app
    env_file:
      - .env

  flower:
    image: mher/flower:2.0.1
    expose:
      - "5555"
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - FLOWER_PORT=5555
    depends_on:
      - rabbitmq
      - celery

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    environment:
      - DB_SQLITE_FILE=/data/npm.db
      - DISABLE_IPV6=true
      - DEFAULT_EMAIL=${NGINX_PROXY_MANAGER_ADMIN_EMAIL}
      - DEFAULT_PASSWORD=${NGINX_PROXY_MANAGER_ADMIN_PASSWORD}
    volumes:
      - nginx_proxy_data:/data
      - nginx_proxy_letsencrypt:/etc/letsencrypt
    depends_on:
      - app
      - flower

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped

volumes:
  nginx_proxy_data:
  nginx_proxy_letsencrypt:
  portainer_data: